// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCommentsCommentIDLikesReader is a Reader for the GetCommentsCommentIDLikes structure.
type GetCommentsCommentIDLikesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommentsCommentIDLikesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCommentsCommentIDLikesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCommentsCommentIDLikesOK creates a GetCommentsCommentIDLikesOK with default headers values
func NewGetCommentsCommentIDLikesOK() *GetCommentsCommentIDLikesOK {
	return &GetCommentsCommentIDLikesOK{}
}

/*GetCommentsCommentIDLikesOK handles this case with default header values.

対象記事のコメントの一覧
*/
type GetCommentsCommentIDLikesOK struct {
	Payload *GetCommentsCommentIDLikesOKBody
}

func (o *GetCommentsCommentIDLikesOK) Error() string {
	return fmt.Sprintf("[GET /comments/{comment_id}/likes][%d] getCommentsCommentIdLikesOK  %+v", 200, o.Payload)
}

func (o *GetCommentsCommentIDLikesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCommentsCommentIDLikesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCommentsCommentIDLikesOKBody get comments comment ID likes o k body
swagger:model GetCommentsCommentIDLikesOKBody
*/
type GetCommentsCommentIDLikesOKBody struct {

	// count
	Count float64 `json:"count,omitempty"`
}

// Validate validates this get comments comment ID likes o k body
func (o *GetCommentsCommentIDLikesOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCommentsCommentIDLikesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCommentsCommentIDLikesOKBody) UnmarshalBinary(b []byte) error {
	var res GetCommentsCommentIDLikesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
